Notes and Tasks                                  -*- org -*-

* Notes
** simpler backend data structure
What if we only used 1 hash to hold all nodes and edges..., and what
if nodes could hold other nodes in their edge list, and edges could
hold other edges in their node list, what sort of structure would this
be?  A useful generalization of a graph?

* Tasks [4/8]
** DONE min cut
Some notes in the stuff/ directory.
** TODO breadth/depth first maps
** DONE minimum spanning tree
Prim's algorithm

** TODO minimum edge coloring
** DONE clustering coefficient
the clustering coefficient
\begin{equation*}
  C = \frac{\text{number of closed connected triples}}{\text{number of connected triples}}
\end{equation*}

** TODO measure assortativity
http://en.wikipedia.org/wiki/Assortativity

Should take an optional :key function which defaults to node degree.

** DONE random graph generators [2/2]
http://en.wikipedia.org/wiki/Random_graph

Both of the following types of random graphs
- [X] [[http://en.wikipedia.org/wiki/Edgar_Gilbert][Edgar_Gilbert]]
- [X] [[http://en.wikipedia.org/wiki/Erd%C5%91s%E2%80%93R%C3%A9nyi_model][Erdos-Renyi]]

** TODO more attractive documentation
like it or not, people will initially look for pictures
- graph-dot -> images in documentation
- graph-json -> images in documentation
